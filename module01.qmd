# Module 1: Acquisition of Near-Cloud-Free Satellite Imagery {#sec-module-1}

# Module Overview {.unnumbered}

The output of this module is high-quality, near-cloud-free satellite imagery, which is essential for producing accurate and reliable land use and land cover (LULC) datasets. This module focuses on acquiring satellite imagery that has been pre-processed and corrected, including procedures such as cloud masking and shadow removal.

# Input {.unnumbered}

**User's Input**

1.  Area of interest (AOI).
2.  Selection of single or multiple time-series imagery.
3.  Target map year (YYYY).
4.  Desired spatial resolution (meters).
5.  Maximum allowable cloud cover (%).

**Automatic System Input**

1.  Raw satellite imagery.
2.  Administrative boundaries.

# Output {.unnumbered}

1.  Selected AOI.
2.  Near-cloud-free satellite imagery.

# Process {.unnumbered}

```{mermaid}

flowchart TD

A([<a href="#sec-selection-of-aoi">Selection of AOI</a>])
B([<a href="#sec-aoi-from-administrative-boundaries">AOI from Administrative Boundaries</a>])
C([<a href="#sec-aoi-from-a-shapefile">AOI from a Shapefile</a>])
D([<a href="#sec-aoi-from-on-screen-digitizing">AOI from On-Screen Digitizing</a>])
E([<a href="#sec-input-spatial-image-parameters">Input Spatial Image Parameters</a>])
F([<a href="#sec-satellite-imagery-cannot-be-found">Satellite Imagery Not Found</a>])
G([<a href="#sec-satellite-imagery-post-processing">Satellite Imagery Post-Processing: Visualization & Saving Data</a>])

%% Flow connections
A --> B
A --> C
A --> D

B --> E
C --> E
D --> E

E -->|Imagery available| G
E -->|Imagery not available| F

F --> E

```

## Initialize Logging and Classes

### Initialize Logging and Classes

**Back-end**

The system configure global logging and set up two main classes for data retrieval and statistics.

::: callout-tip
## Related Functions

`logging.basicConfig()` to sets up global log format.

`Reflectance_Data.__init__()` to initializes logger for this class.
:::

## Selection of AOI {#sec-selection-of-aoi}

::: callout-note
@sec-aoi-from-administrative-boundaries, @sec-aoi-from-shapefile, @sec-aoi-from-on-screen-digitizing are options.
:::

### AOI from Administrative Boundaries {#sec-aoi-from-administrative-boundaries}

**Front-end**

The user selects an administration boundary.

**Back-end**

The system queries the FAO Global Administrative Unit Layers (GAUL) 2015 datasets, which provide standardized information on country and sub-national boundaries, and saves the AOI as a variable

### AOI from Shapefile {#sec-aoi-from-shapefile}

**Front-end**

1.  The user can upload their `.SHP` file. in `.ZIP` format that includes all necessary files (`.SHP`, `.SHX`, `.DBF`, `.PRJ`).

2.  The user will get a feedback such as "AOI conversion completed!", "Failed to convert AOI to Google Earth Engine Format", "Geometry Validation Failed", "Error Reading Shapefile".

**Back-end**

1.  The system currently supports only shapefile in `.ZIP` format.
2.  An Upload button is provided, allowing user to uploaded the file. It is then extracted to a temporary directory.
3.  Next, the system validates and repairs the shapefile geometries (if any errors are found) in a GeoDataFrame (`.GDF`), converts the cleaned geometries into an Earth Engine objects, and converts the coordinate system into WGS 1984.
4.  If an error occurs still, the system displays an error message and suggests performing a shapefile simplification process using GIS software.
5.  The system displays a small preview map centered on the AOI.

### AOI from On-Screen Digitizing {#sec-aoi-from-on-screen-digitizing}

**Front-end**

The user is presented with an interactive on-screen digitization process.

**Back-end**

\[not developed yet\]

## Selecting and Preparing Satellite Imagery

### Defining Optical and Thermal Datasets {#sec-input-spatial-image-parameters}

**Back-end**

1.  The system declares Landsat collections for optical and thermal processing.
2.  The system currently supports Landsat 1-4 at sensor radiance and Landsat 5-9 collection 2 surface reflectance Analysis Ready Data (ARD), excluding the thermal bands. Landsat mission availability is as follows:
    -   Landsat 1 Multispectral Scanner/MSS (1972 - 1978)
    -   Landsat 2 Multispectral Scanner/MSS (1978 - 1982)
    -   Landsat 3 Multispectral Scanner/MSS (1978 - 1983)
    -   Landsat 4 Thematic Mapper/TM (1982 - 1993)
    -   Landsat 5 Thematic Mapper/TM (1984 - 2012)
    -   Landsat 7 Enhanced Thematic Mapper Plus/ETM+ (1999 - 2021)
    -   Landsat 8 Operational Land Imager/OLI (2013 - present)
    -   Landsat 9 Operational Land Imager-2/OLI-2 (2021 - present)
3.  The system rename bands per sensor type to standarize band namings, so all sensors have common names.

::: callout-tip
## Related Functions

`rename_landsat_bands ()`
:::

### Input Spatial Image Parameters

**Front-end**

The user is prompted to fill in these parameters:

1.  Spatial resolution (meters): Specify the desired spatial resolution.
2.  Input year: Choose either single-date or multi-year imagery.
3.  Maximum cloud cover: Set a preferred cloud cover threshold, or use the default value of 30%.

**Back-end**

1.  The system retrieves images that match user’s selected criteria, including spatial resolution, year, and cloud cover. From `get_optical_data()` receives all inputs: AOI, dates, dataset key, and cloud cover threshold.

::: callout-tip
## Related Functions

`Reflectance_Data.get_optical_data()` to get reflectance data from all input parameters.

`ee.Filter.lt()` to remove images exceeding cloud cover limit.

`Reflectance_Stats.get_collection_statistics()` (again, for filtered set)
:::

2.  For single-year imagery, the system selects Landsat images from December 31st of year T or the lowest cloud cover scene available that year. For multi-year imagery, the system retrieves the lowest cloud cover image for each year in the specified range.

3.  The system then converts year input (e.g., 2022) into full date strings.

::: callout-tip
## Related Functions

Local helper function: `parse_year_or_date()`
:::

4.  The system crops and mosaics the selected satellite imagery to match the user’s AOI and date range.

::: callout-tip
## Related Functions

`ee.ImageCollection()`; `.filterBounds()`; `.filterDate()`
:::

5.  The system performs cloud masking in three steps: cloud detection, mask refinement, and image compositing. The QA_PIXEL band encodes pixel conditions using specific bit flags. `Bitwise AND` operations are applied to isolate these conditions, focusing on clouds (bit 4, value 16) and cloud shadows (bit 3, value 8). Pixels matching these flags are excluded to produce a cleaner, near cloud-free image.

::: callout-tip
## Related Functions

`mask_landsat_sr()`
:::

5.  The system evaluates whether the retrieved imagery meets the required spatial resolution, input year, and cloud cover thresholds.

6.  If there is no satellite imagery available for the user's input parameters, proceed to @sec-satellite-imagery-cannot-be-found

### Satellite Imagery Not Found Based on User’s Parameters {#sec-satellite-imagery-cannot-be-found}

**Front-end**

The user is prompted to adjust parameters, such as increasing the cloud cover limit, selecting a different time period, or choosing a different spatial resolution.The user will then get a feedback: "No images found for the selected criteria, increase cloud cover threshold or change the date range".

**Back-end**

1.  Before prompting the user to insert new parameters, the system searches imagery from year T to T-2 to replace cloudy areas via image compositing.
2.  If requirements remain unmet, @sec-input-spatial-image-parameters will re-run based on new user parameters.

::: callout-tip
## Related function

Conditional logging via `self.logger.info()` / `self.logger.warning()`
:::

## Satellite Imagery Post-Processing {#sec-satellite-imagery-post-processing}

### Visualization and Saving Data

**Front-end**

1.  The user can visualize the near cloud-free imagery within the web portal and download it as a GeoTIFF (`.TIF` )

2.  Prior to initiating the image download, the user inputs technical parameters of the image that includes: file name, coordinate system, and spatial resolution.

3.  If the user chooses not to download it, they may proceed to [Module 2](@sec-module-2).

4.  A summary report containing the metadata is provided as a `.TXT` file that includes:

    -   Total images found
    -   Data range of images
    -   Unique WRS tiles
    -   Path row tiles
    -   Scene IDs
    -   Image acquisition dates
    -   Average scene cloud cover
    -   Date range
    -   Cloud cover range

::: callout-tip
:::

**Back-end**

1.  The system produces near-cloud-free Landsat imagery for the defined AOI, saves it as a variable, and visualizes the processed datasets.

2.  A summary report of metadata is generated, including acquisition details, cloud cover statistics, and a summary of processing steps applied.

::: callout-tip
## Related function

Reflectance_Stats.get_collection_statistics()
:::

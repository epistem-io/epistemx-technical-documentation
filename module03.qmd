# Module 3: Training Data Generation {#sec-module-3}

# Module Overview

In supervised classification, the quality of training data directly determines the accuracy of the resulting model. The output of Module 3 is to produce georeferenced point vector datasets for each LULC class defined by the user in the preceding step [Module 2](@sec-module-2), accompanied by quantitative and visual summaries that facilitate rigorous evaluation, quality control, and optimization for subsequent classification. The module supports two workflows for data preparation: (1) importing user-defined datasets, or (2) interactively generating samples using system-guided tools. Upon completion, the user obtains a structured dataset for each LULC class, together with statistical diagnostics to assess the quality and representativeness of the data prior to classification

# Input {.unnumbered}

**User’s Input**

-   User-specified options for generating training datasets
-   User selection of the sampling method and
-   User selection of approach for collecting training points

**Input from External Sources**

-   Training dataset from RESTORE+ project
-   Public sample data from the Epistem-X repository system.

**Input from Other Modules**

-   User-selected AOI (@sec-selection-of-aoi)
-   Near cloud-free satellite imagery (@sec-satellite-imagery-post-processing)
-   LULC classification table (@sec-saving-the-lulc-classification-table)

# Output {.unnumbered}

-   Georeferenced training dataset
-   Statistical analyses of the dataset

# Process

```{mermaid}
flowchart TD

A([<a href="#sec-initial-option-for-training-data-source">Initial Option for Training Data Source</a>])
B([<a href="#sec-user-upload-their-own-training-data">User Upload Their Own Training Data</a>])
C([<a href="#sec-options-when-user-doesnt-have-training-data">Options When User Doesn't Have Training Data</a>])
D([<a href="#sec-on-screen-sampling">On-Screen Sampling</a>])
E([<a href="#sec-using-default-restore-dataset">Using Default RESTORE+ Dataset</a>])
F([<a href="#sec-using-epistem-x-repository">Using Epistem-X Repository</a>])
G([<a href="#sec-data-validation-and-statistical-analysis">Data Validation & Statistical Analysis</a>])
H([Finalize Dataset → Proceed to Module 4])

%% Flow connections
A -->|User has training data| B
A -->|User doesn't have training data| C

B -->|Add new samples via on-screen sampling| D
B -->|No additional samples| G

C -->|Use on-screen sampling| D
C -->|Use RESTORE+ dataset| E
C -->|Use Epistem-X repository| F

D --> G
E --> G
F --> G

G -->|User is satisfied| H
G -->|User is not satisfied| D


```

## Uploading the training data {#sec-uploading-the-training-data}

### Initial option for training data source {#sec-initial-option-for-training-data-source}

#### Back-end

-   If the user chooses to upload their own training data, the system will continue to @sec-uploading-the-training-data
-   If the user does not have their own training data, the system will continue to @sec-options-when-user-doesnt-have-training-data

#### Front-end

The system initiates the workflow by providing the user with two primary options:

-   “I have training data”
-   “I don’t have training data”

### User upload their own training data {#sec-user-upload-their-own-training-data}

#### Back-end

-   The system provides an upload interface that accepts only `.shp` (containing point features with LULC class attributes) or `.csv` format (containing point coordinates and associated LULC class labels established in [Module 2](@sec-module-2)). The system will then check if the uploaded data fulfills the requirement. If discrepancies are detected, the system will flag the inconsistent classes. The user can then either:
    1.  Re-upload corrected training data, or
    2.  Add the missing or inconsistent samples through the system’s on-screen sampling interface (@sec-on-screen-sampling)
-   If the user chooses to add training data with on-screen sampling, the system will proceed to Sub-step 3, with additional uploaded samples appearing on the interface
-   If the user does not want to add training data with on-screen sampling, the system will analyze the training data and proceed to @sec-data-validation-and-statistical-analysis

#### Front-end

-   User uploads one of the supported file types
-   User chooses yes or no whether they want to add new training data through on-screen sampling

### Options when user doesn't have training data {#sec-options-when-user-doesnt-have-training-data}

#### Back-end

-   If the user uses on-screen sampling, the system will proceed to @sec-on-screen-sampling
-   If the user uses RESTORE+ default data, the system will proceed to @sec-using-default-restore-dataset
-   If the user uses Epistem-X public repository, the system will proceed to @sec-using-epistem-x-repository

#### Front-end

User is given the following options to proceed:

-   Use on-screen sampling
-   Use RESTORE+ default data
-   Use Epistem-X public repository

### On-screen sampling {#sec-on-screen-sampling}

#### Back-end

-   The system will display a panel containing a table with the following columns:
    1.  Land cover class name
    2.  Number of identified samples
    3.  Button to add points on the basemap
-   The user selects the land cover class in the table to which sample data will be added:
    1.  The user performs on-screen sampling (adding, removing, or relocating points).
    2.  The system updates the “number of identified samples” column in real time while the user performs on-screen sampling.
-   The system provides a button to save the results of the on-screen sampling, which the user can click once sufficient data has been added.

#### Front-end

-   The user interface provides an interactive environment for visual sampling on a basemap
-   A two-way binding mechanism ensures that every sampling action on the basemap is immediately reflected in the panel, and vice versa

### Using default RESTORE+ dataset {#sec-using-default-restore-dataset}

#### Back-end

The system recalls RESTORE+ dataset and display the dataset in a panel containing these information: LULC class and number of identified samples inside the AOI

#### Front-end

The system provides a “Use Data” button to define the RESTORE+ dataset as the sample data variable.

### Using Epistem-X Repository {#sec-using-epistem-x-repository}

#### Back-end

System displays the Epistem-X public sample data repository in a panel. Each dataset is presented in a table with at least three columns: data location (shown as a map inset), land cover class name, and the number of identified samples.

#### Front-end

The user selects a dataset from the repository and closes the panel. The user accesses public training datasets from the Epistem-X repository and can:

-   Browse and select point-based training data.
-   Choose specific coordinates for relevant regions.
-   Select predefined models or spectral signature libraries.
-   Apply these publicly available models/signatures to support the classification process.

A “Use Data” button is provided to define the selected public dataset as the sample data variable.

## Training data validation and statistical analysis {#sec-training-data-validation-and-statistical-analysis}

### Training data validation and statistical analysis

#### Back-end

-   The system calculates the statistical information of the training dataset, including scattergrams for exploring relationships between spectral bands or indices, histograms for examining per-class spectral distributions, a tabular data view for reviewing attribute tables, and separability analysis (Jeffries–Matusita distance between classes) to assess the spectral differentiation between classes
-   The system performs validation and quality checks on the training dataset by ensuring compliance with the expected format and schema, counting the number of samples in each LULC class to detect class imbalance, and verifying that all training points fall within the defined Area of Interest (AOI)

#### Front-end

The user is given the statistical information of the training dataset and prompted to indicate whether they are satisfied with the training dataset statistical result.

-   If Yes: The dataset is finalized and ready for classification and proceed to Module 4.
-   If No: The interface will return to @sec-aoi-from-on-screen-digitizing to interactively edit the existing training dataset
